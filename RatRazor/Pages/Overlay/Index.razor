@page "/overlay"
@using RatTracking.FetchModels
@using RatStash
@using RatLib.Scan
@inject RatRazor.Interfaces.IRatScannerUI RatScannerUI
@inject RatTracking.TarkovTrackerDB TarkovTrackerDB
@inject RatLib.VirtualScreenOffset VirtualScreenOffset
@inject IJSRuntime JSRuntime;
@implements IDisposable

@if (RatScannerUI.CurrentItemScan != null && RatScannerUI.CurrentItemScan.GetToolTipPosition() != null && RatScannerUI.CurrentItemScan.DissapearAt > DateTimeOffset.Now.ToUnixTimeMilliseconds())
{
    @if(RatScannerUI.CurrentItemScan is ItemIconScan iconScan)
    {
        <div style="font-size:smaller;position:absolute;left:@(RatScannerUI.CurrentItemScan.GetToolTipPosition().X - VirtualScreenOffset.XOffset + 1)px;top:@(RatScannerUI.CurrentItemScan.GetToolTipPosition().Y - VirtualScreenOffset.YOffset + 1)px;width:@(iconScan._icon.Size.X - 1)px;height:@(iconScan._icon.Size.Y - 1)px;">
            <div style="height:100%;width:100%;position:relative;text-shadow: 0px 0px 5px black;" class="pa-1">
                <div style="position:absolute;left:0px;top:0px;">
                    <div style="position:relative;">
                        <img src="@($"https://assets.tarkov-tools.com/{RatScannerUI.CurrentItemScan.MatchedItems[0].Id}-grid-image.jpg")" style="filter:brightness(1.3);position:absolute;left:0px;top:0px;z-index:-1;@(iconScan.Rotated ? $"width:{iconScan._icon.Size.Y - 2}px;height:{iconScan._icon.Size.X - 2}px;transform: rotate(0.25turn) translate(0%, -100%);transform-origin: left top;" : $"width:{iconScan._icon.Size.X - 2}px;height:{iconScan._icon.Size.Y - 2}px;")">
                    </div>
                </div>
                <div class="stroke">
                    @RatScannerUI.Avg24hPrice
                </div>
                 @if(RatScannerUI.TrackingNeeds.QuestRemaining > 0) {
                     <div class="d-flex align-center stroke">
                        @RatScannerUI.TrackingNeeds.QuestRemaining <MudIcon Icon="@Icons.Filled.Checklist" Size="Size.Small" Class="ml-1" />
                     </div>
                 }
                 @if(RatScannerUI.TrackingNeeds.HideoutRemaining > 0) {
                     <div class="d-flex align-center stroke">
                        @RatScannerUI.TrackingNeeds.HideoutRemaining <MudIcon Icon="@Icons.Filled.House" Size="Size.Small" Class="ml-1" />
                     </div>
                 }
            </div>
        </div>
    }
    else
    {
        <div class="d-flex align-center" style="position:absolute;left:@(RatScannerUI.CurrentItemScan.GetToolTipPosition().X - VirtualScreenOffset.XOffset)px;top:@(RatScannerUI.CurrentItemScan.GetToolTipPosition().Y - VirtualScreenOffset.YOffset)px;background:#121212;padding:4px;">
        <span class="stroke">
            @RatScannerUI.Avg24hPrice
        </span>
        @if(RatScannerUI.TrackingNeeds.QuestRemaining > 0) {
            <MudIcon Icon="@Icons.Filled.Checklist" Size="Size.Small" Class="ml-1" />
        }
        @if(RatScannerUI.TrackingNeeds.HideoutRemaining > 0) {
            <MudIcon Icon="@Icons.Filled.House" Size="Size.Small" Class="ml-1" />
        }
        </div>
    }
}

@code {

    protected override void OnInitialized()
    {
        RatScannerUI.PropertyChanged += PropertyChangeHandler;
    }

    private async void PropertyChangeHandler(object sender, EventArgs e)
    {
        await InvokeAsync(() => StateHasChanged());
    }

    public void Dispose() => RatScannerUI.PropertyChanged -= PropertyChangeHandler;
}
